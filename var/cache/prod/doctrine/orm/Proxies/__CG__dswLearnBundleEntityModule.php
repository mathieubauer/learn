<?php

namespace Proxies\__CG__\dsw\LearnBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Module extends \dsw\LearnBundle\Entity\Module implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'id', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'name', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'chat', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'open', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'course', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'units', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'messages', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'tracks', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'picto', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'titre', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'displayOrder'];
        }

        return ['__isInitialized__', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'id', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'name', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'chat', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'open', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'course', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'units', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'messages', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'tracks', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'picto', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'titre', '' . "\0" . 'dsw\\LearnBundle\\Entity\\Module' . "\0" . 'displayOrder'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Module $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setChat($chat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChat', [$chat]);

        return parent::setChat($chat);
    }

    /**
     * {@inheritDoc}
     */
    public function getChat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChat', []);

        return parent::getChat();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpen($open)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpen', [$open]);

        return parent::setOpen($open);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpen', []);

        return parent::getOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function addUnit(\dsw\LearnBundle\Entity\Unit $unit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUnit', [$unit]);

        return parent::addUnit($unit);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUnit(\dsw\LearnBundle\Entity\Unit $unit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUnit', [$unit]);

        return parent::removeUnit($unit);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnits', []);

        return parent::getUnits();
    }

    /**
     * {@inheritDoc}
     */
    public function setCourse(\dsw\LearnBundle\Entity\Course $course)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCourse', [$course]);

        return parent::setCourse($course);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourse', []);

        return parent::getCourse();
    }

    /**
     * {@inheritDoc}
     */
    public function addMessage(\dsw\LearnBundle\Entity\Message $message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMessage', [$message]);

        return parent::addMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMessage(\dsw\LearnBundle\Entity\Message $message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMessage', [$message]);

        return parent::removeMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessages', []);

        return parent::getMessages();
    }

    /**
     * {@inheritDoc}
     */
    public function setPicto($picto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicto', [$picto]);

        return parent::setPicto($picto);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicto', []);

        return parent::getPicto();
    }

    /**
     * {@inheritDoc}
     */
    public function addTrack(\dsw\LearnBundle\Entity\Track $track)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTrack', [$track]);

        return parent::addTrack($track);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTrack(\dsw\LearnBundle\Entity\Track $track)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTrack', [$track]);

        return parent::removeTrack($track);
    }

    /**
     * {@inheritDoc}
     */
    public function getTracks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTracks', []);

        return parent::getTracks();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayOrder($displayOrder = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayOrder', [$displayOrder]);

        return parent::setDisplayOrder($displayOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayOrder', []);

        return parent::getDisplayOrder();
    }

}
